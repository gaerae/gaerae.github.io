html, body {
  padding-top: 0.2rem;
  font-family: 'D2 coding', 'Fira Code', monospace;
  font-size: 14px;
}
@media screen and (min-width: 1024px) {
  html, body { font-size: 18px; }
}
body {
  --color-background: #282C34;
  --color-white-space: #3C4049;
  --color-collapsed: #3C4049;
  --color-comment: #5C6370;
  --color-variable: #ABB2BF;
  --color-expression: #ABB2BF;
  --color-storage-type: #C678DD;
  --color-keyword: #61AFEF;
  --color-type: #E5C07B;
  --color-class: #E5C07B;
  --color-string: #98C379;
  --color-string-link: #98C379;
  --color-constant: #D19A66;
  --color-number: #D19A66;
  --color-zsh-text: #899;
  --color-zsh-path-background: #2E8CCF;
  --color-zsh-path-foreground: #000;
  --color-zsh-branch-background: #85981C;
  --color-zsh-branch-foreground: #000;
  --color-zsh-command-valid: #85981C;
  --color-zsh-args: #cdd;
  margin: 0.3rem;
  background-color: var(--color-background);
  color: #F8F8F2;
}
.zsh { color: var(--color-zsh-text); font-size: 0; padding-bottom: 0.5rem; }
.zsh .now { display: inline; }
.zsh .ip { display: inline; }
.zsh span { font-size: 1rem; }
.zsh .branch:before,
.zsh .command:before { content: ''; display: inline-block; width: 0; height: 0; border: 0.6rem solid transparent; vertical-align: -0.25rem; }
.zsh .path { background-color: var(--color-zsh-path-background); color: var(--color-zsh-path-foreground); padding-right: 1rem; }
.zsh .branch { background-color: var(--color-zsh-branch-background); color: var(--color-zsh-branch-foreground); padding-right: 1rem; }
.zsh .branch:before { border-left-color: var(--color-zsh-path-background); }
.zsh .command:before { border-left-color: var(--color-zsh-branch-background); }
.zsh .command { color: var(--color-zsh-command-valid); }
.zsh .args { padding-left: 1rem; color: var(--color-zsh-args); }

.space:before { content: 'Â·'; }
.line { display: block; padding: 2px 0 2px 0 }
.white-space { color: var(--color-white-space); }
.comment { color: var(--color-comment); }
.variable { color: var(--color-variable); }
.expression { color: var(--color-expression); }
.storage-type { color: var(--color-storage-type); }
.keyword { color:var(--color-keyword); }
.type { color: var(--color-type); }
.class { color: var(--color-class); }
.string { color: var(--color-string); }
.string a { color: var(--color-string-link); }
.constant { color: var(--color-constant); }
.number { color: var(--color-number); }
.collapsed { color: var(--color-collapsed); }
